namespace ExpressionEvaluator.CodeAnalysis
{
    public enum TipoSintaxis
    {
        TokenInteger,
        TokenMas,
        TokenMenos,
        TokenMultiplicacion,
        TokenDivision,
        TokenParentesisApertura,
        TokenParentesisCierre,
        TokenInvalido,
        TokenEOF,
        ExpresionBinaria,
        TokenEspacioEnBlanco,
        TokenMenorQue,
        ExpresionNumerica,
        ExpresionEnParentesis,
        TokenPotencia,
        TokenModulo,
        TokenMayorQue,
        TokenNot,
        TokenMenorIgualQue,
        TokenMayorIgualQue,
        TokenIgualIgual,
        TokenIgual,
        TokenNotIgual,
        IntegerKeyword,
        LongKeyword,
        StringKeyword,
        DoubleKeyword,
        BoolKeyword,
        CharKeyword,
        FloatKeyword,
        LetKeyword,
        UseKeyword,
        FromKeyword,
        Identificador,
        TokenString,
        TokenIncremento,
        TokenDecremento,
        TokenComentario,
        TokenLlavesApertura,
        TokenLlavesCierre,
        TokenCorchetesApertura,
        TokenCorchetesCierre,
        TokenGuionbajo,
        TokenPuntoyComa,
        EndOfLineToken,
        TokenOr,
        TokenAnd,
        TokenOperadorMiembro,
        TokenComa,
        ExpresionUse,
        CodeExpressionSyntax,
        VoidKeyword,
        ExpresionMain,
        ExpresionBool,
        TokenBool,
        ExplresionDeclaracion,
        CharToken,
        StringExpressionSyntax,
        TokenFuncionMain
    }

}